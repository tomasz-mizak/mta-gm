
-- textdraws.scale = 1
-- textdraws.font = "default"
-- textdraws.renderDistance = 20

-- textdraws.debug = {}
-- textdraws.debug.keys = {}
-- textdraws.debug.keys.player = {"accountID"}
-- textdraws.debug.keys.marker = {
--   ["fuelDispenser"] = {"id","currentValue","maxValue","in-use"}
-- }

-- addEventHandler('onClientRender', root, function()
--   if not localPlayer:getData("logged") then return end
--   -- normal textdraws for elements and world textdraws
--   for _, e in ipairs(Element.getAllByType("marker")) do
--     local distance = getDistanceBetweenPoints3D(e.position,localPlayer.position)
--     local drawPos = Vector3(getScreenFromWorldPosition(e.position))
--     local mess = e:getData("textdraw:msg")
--     if mess then
--       if drawPos.x == 0 and drawPos.y == 0 then return end
--       local c = e:getData("textdraw:color") or "#ffffff"
--       dxDrawText(string.format("%s%s", c, tostring(mess)), drawPos.x-150, drawPos.y-70+(16*(i-1)), 0, 0)
--     end
--     local drawPos = Vector3(getScreenFromWorldPosition(e.position.x,e.position.y,e.position.z+2))
--     if e:getData("fuelDispenser") and distance<20 and isLineOfSightClear(localPlayer.position,e.position, true, false, false) and localPlayer.dimension==e.dimension and drawPos.x ~= 0 and drawPos.y ~= 0 then -- fuel stations
--       if drawPos.x == 0 and drawPos.y == 0 then return end
--       local s = string.format("dostÄ™pne %s z %sl paliwa", tostring(round(e:getData("currentValue"),2)), tostring(e:getData("maxValue")))
--       dxDrawText(s, drawPos.x-dxGetTextWidth(s,textdraws.scale,textdraws.font)/2, drawPos.y, 0, 0)
--     end
--   end
--   print(toJSON(getSpawnPoints()))

--   -- TODO: DISPLAY DEBUG DATA
--   if not isDebugViewActive() then return end -- this section is only for admins
--   for _, e in ipairs(Element.getAllByType("player")) do
--     local drawPos = Vector3(getScreenFromWorldPosition(e.position))
--     local distance = getDistanceBetweenPoints3D(e.position,localPlayer.position)
--     if drawPos.x == 0 and drawPos.y == 0 then return end
--     if distance > 20 then return end
--     for i, v in ipairs(textdraws.debug.keys.player) do
--       dxDrawText(string.format("%s: %s", v, e:getData(v)), drawPos.x-150+1, drawPos.y-70+(16*(i-1))+1, 0, 0, tocolor(0,0,0,255))
--       dxDrawText(string.format("%s: %s", v, e:getData(v)), drawPos.x-150, drawPos.y-70+(16*(i-1)), 0, 0, tocolor(200,0,0,255))
--     end
--   end
--   for _, e in ipairs(Element.getAllByType("marker")) do
--     local drawPos = Vector3(getScreenFromWorldPosition(e.position.x,e.position.y,e.position.z+2))
--     local distance = getDistanceBetweenPoints3D(e.position,localPlayer.position)
--     if drawPos.x == 0 and drawPos.y == 0 then return end
--     if distance > 20 then return end
--     if e:getData("fuelDispenser") then
--       for i, v in ipairs(textdraws.debug.keys.marker["fuelDispenser"]) do
--         dxDrawText(string.format("%s: %s", v, tostring(e:getData(v))), drawPos.x-200+1, drawPos.y+(16*(i-1))+1, 0, 0, tocolor(0,0,0,255))
--         dxDrawText(string.format("%s: %s", v, tostring(e:getData(v))), drawPos.x-200, drawPos.y+(16*(i-1)), 0, 0, tocolor(200,0,0,255))
--       end
--     end
--   end
--   for _, e in ipairs(getSpawnPoints()) do -- spawnpoints
--     local drawPos = Vector3(getScreenFromWorldPosition(e[3],e[4],e[5]+2))
--     local distance = getDistanceBetweenPoints3D(e[3],e[4],e[5],localPlayer.position)
--     if drawPos.x == 0 and drawPos.y == 0 then return end
--     if distance > 20 then return end
--     local state = "ENABLED"
--     if not e[2] then state = "DISABLED" end
--     local s = string.format("SPAWNPOINT ID[%d] POS:[%d,%d,%d] ROT:[%d,%d,%d] %s", e[1], e[3], e[4], e[5], e[6], e[7], e[8], state)
--     dxDrawText(s, drawPos.x+1, drawPos.y+(16*(i-1))+1, 0, 0, tocolor(0,0,0,255))
--     dxDrawText(s, drawPos.x, drawPos.y+(16*(i-1)), 0, 0, tocolor(200,0,0,255))
--   end
-- end)